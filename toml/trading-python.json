{
  "/PierreRochard/coinbase-exchange-order-book": {
    "Description": "Real-time Coinbase Exchange (GDAX) order book + basic market maker bot",
    "Link": [
      "https://github.com/PierreRochard/coinbase-exchange-order-book"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "bot",
      "github"
    ]
  },
  "/ccxt/ccxt - cryptocurrency trading library with support for more than 100 bitcoin/altcoin exchanges": {
    "Description": "A JavaScript / Python / PHP cryptocurrency trading library with support for more than 100 bitcoin/altcoin exchanges",
    "Link": [
      "https://github.com/ccxt/ccxt",
      "https://pypi.org/project/ccxt/",
      "https://ccxt.readthedocs.io/en/latest/README.html"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "library",
      "javascript",
      "php",
      "ccxt"
    ]
  },
  "/pirate/crypto-trader": {
    "Description": "moneybag Cryptocurrency trading bot library with a simple example strategy.",
    "Link": [
      "https://github.com/pirate/crypto-trader"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "github",
      "gemini"
    ]
  },
  "/rochars/trade": {
    "Description": "A paradigm for financial applications. Reference implementation in Python. #EleN\u00e3o",
    "Link": [
      "https://github.com/rochars/trade"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "/wilsonfreitas/awesome-quant": {
    "Description": "A curated list of insanely awesome libraries, packages and resources for Quants (Quantitative Finance)",
    "Link": [
      "https://github.com/wilsonfreitas/awesome-quant"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "awesome"
    ]
  },
  "100% of Nomics Was Created With Our Free Crypto API. Free Instant Access": {
    "Description": "Nomics Free Crypto API",
    "Link": [
      "https://nomics.com/",
      "https://p.nomics.com/podcast"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "api",
      "podcast"
    ]
  },
  "166: The trader\u2019s guide for learning to code\u2014with data scientist, Hugo Bowne-Anderson": {
    "Description": "The idea for asking Hugo to appear on this episode, was to chat about learning a programming language. Because for some traders, having the ability to write code can have great advantages\u2014such as having the ability to collect stats on market behavior, perform research in a robust data-driven way, visualize large amounts of data, backtest and analyse trading ideas, implement algorithmic strategies, etc.",
    "Link": [
      "https://chatwithtraders.com/ep-166-hugo-bowne-anderson/"
    ],
    "Tags": [
      "trading",
      "podcast",
      "development",
      "data-science"
    ]
  },
  "9 Great Tools for Algo Trading": {
    "Description": "In the last 5\u201310 years algorithmic trading, or algo trading, has gained popularity with the individual investor. The rise in popularity has been accompanied by a proliferation of tools and services, to both test and trade with algorithms. I\u2019ve put together a list of 9 tools you should consider using for your algo trading process.",
    "Link": [
      "https://hackernoon.com/9-great-tools-for-algo-trading-e0938a6856cd"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "article",
      "tools"
    ]
  },
  "@arbedout on Quant Trading Strategies": {
    "Description": "It is generally recognized that creating a profitable quantitative trading  strategy is difficult. Most putative strategies are likely not profitable even without considering trading costs.",
    "Link": [
      "https://twitter.com/arbedout/status/1052361549560598528"
    ],
    "Tags": [
      "algorithmic-trading",
      "trading",
      "twitter",
      "thread"
    ]
  },
  "A Newbie Guide to Python": {
    "Description": "Python is a programming language that is useful for writing quick and simple scripts, but it is also a good language to use for creating large-scale full-blown applications. Even massive operations like YouTube use Python to deliver their content over the Web.\n\nreally basic high level information",
    "Link": [
      "https://blog.appdynamics.com/engineering/a-newbie-guide-to-python/"
    ],
    "Tags": [
      "python",
      "development"
    ]
  },
  "A definitive guide to learning Python for Algorithmic Trading": {
    "Description": "Algorithmic trading (also known as black-box trading, automated trading, or simply algo-trading) refers to the process of using computer programmes that follow an algorithm (defined set of instructions) for placing a trade, in order to generate profits at speeds and frequencies that are impossible to achieve manually. These algorithms are based on timing, pricing, quantity, or any other mathematical model. Apart from just offering better profit opportunities for the trader, these algo-trading models also make the market more liquid and make the process a lot more systematic by ruling out any impact of human emotions on the trading activities.",
    "Link": [
      "https://www.womenwhocode.com/blog/a-definitive-guide-to-learning-python-for-algorithmic-trading"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "A first attempt at Bitcoin trading algorithms": {
    "Description": "Algorithmic trading is not a novel idea. In fact it seems to be quite a researched topic, and it's not difficult to find resources about it online. From strategies, to code libraries, to people sharing algorithms on github.\n\nIn or case, we wanted to use it to invest on bitcoin or other cryptocurrencies. To invest you need an exchange: a place that you let you buy and sell bitcoin in exchange for \"real money\" (eg, dollars or euros). In the last years several of them have surged and become established, most notably perhaps Coinbase and Kraken.",
    "Link": [
      "https://dev.to/marbru/a-first-attempt-at-bitcoin-trading-algorithms"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "bitcoin"
    ]
  },
  "A tutorial on how to do algorithmic trading of cryptocurrency": {
    "Description": "If you can get this right your trade bot can make money by automatic trading. This bot can do it's own technical analysis and profit for you. Of course this also has implications for Steem and Steemit as bots are also on Steem. Expect these Steemit bots to get smarter if people choose to refine and test the algorithms are the algorithms are the secret sauce of profit bots.\n\nPython is very simple. A programmer coming from C or C++ can learn Python over a weekend. Writing bots is one of the most simple tasks in Python. Algorithmic trading code is usually very simple scripts but the quality of the algorithms are what make the difference and an algorithm is only as good as it's data sources and it's strategies.",
    "Link": [
      "https://steemit.com/ai/@dana-edwards/a-tutorial-on-how-to-do-algorithmic-trading-of-cryptocurrency"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "ANALYZING CRYPTOCURRENCY MARKETS USING PYTHON": {
    "Description": "A DATA-DRIVEN APPROACH TO CRYPTOCURRENCY SPECULATION\nHow do Bitcoin markets behave? What are the causes of the sudden spikes and dips in cryptocurrency values? Are the markets for different altcoins inseparably linked or largely independent? How can we predict what will happen next?\n\nArticles on cryptocurrencies, such as Bitcoin and Ethereum, are rife with speculation these days, with hundreds of self-proclaimed experts advocating for the trends that they expect to emerge. What is lacking from many of these analyses is a strong foundation of data and statistics to backup the claims.\n\nThe goal of this article is to provide an easy introduction to cryptocurrency analysis using Python. We will walk through a simple Python script to retrieve, analyze, and visualize data on different cryptocurrencies. In the process, we will uncover an interesting trend in how these volatile markets behave, and how they are evolving.",
    "Link": [
      "https://blog.patricktriest.com/analyzing-cryptocurrencies-python/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Algo Trading with REST API and Python | The Basics - Preparing Your Computer": {
    "Description": "Learn how to automate your trading strategy using FXCM's REST API and Python programming language.\n\nThis video is a primer for our tutorial series to help you prepare your computer so you can follow along.  If you are an experienced programmer or have already prepped your computer, feel free to jump ahead to Part 1: Connecting to the REST API https://youtu.be/LJcrTscz0IA",
    "Link": [
      "https://www.youtube.com/watch?v=dx5UvVKui9M"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "videos",
      "rest-api"
    ]
  },
  "Algorithmic Cryptocurrency Swing Trading Strategy Part 1": {
    "Description": "The current crypto market is probably one of the biggest bubbles of our time. The largely unsophisticated adoption & sentiment-driven market (you cant convince me 'dogecoin' & 'crypto kitties' have fundamental value) presents an opportunity to take advantage of the mania & volatility of the market using a multi-asset momentum strategy. The simple thinking here is that people like to jump on the 'next hot coin' & with the market; driven by technical & sentiment-based factors (hey! did you hear about ripple? It's up 1000% last week & is the next hot thing !!) and that can provide an opportunity for systematically exploiting the investor sentiment.\n\nStrategies that take advantage of modest short to medium term moves are known as swing trading strategies. In our algorithm, we use the Parabolic Time/Price System as our indicator which is an adaptive momentum indicator which adjusts to the speed of the trend. Its basic premise is that we want to enter into trades that must continue to be profitable or it will be liquidated (similar to any trend following system). Our exit signal generated from this is much tighter if the market is moving up quickly rather than if it was moving slowly helping us keep most of our profits from the latest 'swing'.",
    "Link": [
      "https://www.linkedin.com/pulse/algorithmic-cryptocurrency-swing-trading-strategy-part-eremenko/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Algorithmic Trading - Winning Strategies and Their Rationale 2013.pdf": {
    "Description": "A comprehensive guide to professional grade algo strategies. The book is concise and to the point. The author provides matlab code which I did not test. While the book describes statistical tools in good detail, in my view experienced systems developers get more value from it than those who are just starting out. I recommend the book to both new traders and pros. New traders can use the book as a good starting point in their research. Pros can use the tools described in the book to enhance their existing strategies.",
    "Link": [
      "https://github.com/hientm36/gnidart/blob/master/Algorithmic%20Trading%20-%20Winning%20Strategies%20and%20Their%20Rationale%202013.pdf",
      "https://www.amazon.com/Algorithmic-Trading-Winning-Strategies-Rationale/dp/1118460146"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Algorithmic Trading 101\u200a\u2014\u200aLesson 4: Portfolio Management and Machine Learning in Python": {
    "Description": "Portfolio Management 101\nHowever, before we delve into machine learning, it\u2019s important to talk about portfolio management strategy \u2014an essential component of long-term trading success.\n\nPortfolio management doesn\u2019t just mean what types of assets, but also:\n\nWhat types of strategies\nHow much of my net worth allocated to each\nHow often do I adjust",
    "Link": [
      "https://medium.com/the-ocean-trade/algorithmic-trading-101-lesson-4-portfolio-management-and-machine-learning-in-python-bc50cd53abbd"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Algorithmic Trading with Python and Quantopian p. 1": {
    "Description": "In this tutorial, we're going to begin talking about strategy back-testing. The field of back testing, and the requirements to do it right are pretty massive. Basically, what's required for us is to create a system that will take historical pricing data and simulate trading in that environment, and then gives us the results.",
    "Link": [
      "https://www.youtube.com/watch?v=GlV_QO5B2eU"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "back-testing"
    ]
  },
  "Algorithmic trading in less than 100 lines of Python code": {
    "Description": "Algorithmic trading refers to the computerized, automated trading of financial instruments (based on some algorithm or rule) with little or no human intervention during trading hours. Almost any kind of financial instrument \u2014 be it stocks, currencies, commodities, credit products or volatility \u2014 can be traded in such a fashion. Not only that, in certain market segments, algorithms are responsible for the lion\u2019s share of the trading volume. The books The Quants by Scott Patterson and More Money Than God by Sebastian Mallaby paint a vivid picture of the beginnings of algorithmic trading and the personalities behind its rise.",
    "Link": [
      "https://www.oreilly.com/learning/algorithmic-trading-in-less-than-100-lines-of-python-code"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Automated Trading Engines": {
    "Description": "The following is a list of automated trading software and services that allow trading on BitMEX.\n\nBitMEX Software\nBitMEX Market Maker\nThis is an adaptation of the popular Liquidbot, written in Python. This trading bot allows traders to quote continuous two-sided markets. The BitMEX Market Maker supports permanent API Keys and is a great starting point for implementing your own trading strategies.\n\nBotVS\nBotVS is the largest algorithmic trading platform for cryptocurrencies in China. It supports Javascript and Python, and has full implementation of BitMEX API. View a simple example.\n\nMore tools are in the works. If you use a library or bot that does not currently support BitMEX, ask the maintainers to email us at support@bitmex.com to get started with our API. Our employees are happy to help.",
    "Link": [
      "https://www.bitmex.com/app/automatedTradingEngines"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "bitmex"
    ]
  },
  "Best Bitcoin Trading Bots in 2018 \u2013 Automated Trading Guide": {
    "Description": "Trading bots is a technique that uses pre-programmed software that analyzes market actions, such as volume, orders, price, and time, and they are rather common in the bitcoin world, because very few traders have time to stare at the charts all day. Bots or program trading is used within many global stock exchanges. Most people trade bitcoin as a way to generate passive income while working their regular day jobs, and bitcoin trading bots are said to establish more efficient trading. Bitcoin trading bots can be utilized on many well-known cryptocurrency exchanges today. There are bots that are free of charge and can be downloaded online, and there are also trading bot services you have to pay for, offered by various trading engine and programming companies.\n\nWith so many people relying on trading bots, the question becomes which one should be avoided and which one can be trusted. Below is a list of top 6 best cryptocurrency trading bots. However, your mileage may vary when using them.",
    "Link": [
      "https://captainaltcoin.com/best-bitcoin-trading-bots/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "bitcoin"
    ]
  },
  "Best Python Libraries/Packages for Finance and Financial Data Scientists": {
    "Description": "Finance professionals involved in data analytics and data science make use of R, Python and other programming languages to perform analysis on a variety of data sets. Python has been gathering a lot of interest and is becoming a language of choice for data analysis. Python also has a very active community which doesn\u2019t shy from contributing to the growth of python libraries. If you search on Github, a popular code hosting platform, you will see that there is a python package to do almost anything you want.This article provides a list of the best python packages and libraries used by finance professionals, quants, and financial data scientists.",
    "Link": [
      "https://www.linkedin.com/pulse/best-python-librariespackages-finance-financial-data-majid-aliakbar/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Build Crypto Bitcoin Trading Bot with Python Binance CCXT\u200a\u2014\u200aHow To Video Tutorials with Code": {
    "Description": "This Medium post will serve as a centralized location for the Youtube Tutorials, Github Code, and links to further reading for this project, which has grown quite extensive with a large community, numerous tutorials, and code which is ready to be deployed on your own system in order to begin trading cryptocurrencies algorithmic with a bot.",
    "Link": [
      "https://medium.com/@BlockchainEng/how-to-build-an-automated-cryptocurrency-trading-bot-on-binance-with-python-2cd9b5874e44"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "resources"
    ]
  },
  "Building a Python Fintech App in 200 Lines of Code\u200a\u2014\u200aIntroducing Betalyzer": {
    "Description": "Betalyzer is a fully function web app that uses some key Python libraries to create a financial technology application in 200 lines of code (ok, ok, it is more like 226 as of this writing). Betalyzer makes use of the modern financial data and web stack including pandas, Flask, Quandl, and Jupyter.",
    "Link": [
      "https://medium.com/@ashishsingal1/introducing-betalyzer-a-fintech-tutorial-110ac9abda58"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "betalyzer"
    ]
  },
  "Catalyst -an algorithmic trading library crypto-assets written in Python": {
    "Description": "Catalyst is an algorithmic trading library for crypto-assets written in Python. It allows trading strategies to be easily expressed and backtested against historical data (with daily and minute resolution), providing analytics and insights regarding a particular strategy\u2019s performance. Catalyst also supports live-trading of crypto-assets starting with four exchanges (Binance, Bitfinex, Bittrex, and Poloniex) with more being added over time. Catalyst empowers users to share and curate data and build profitable, data-driven investment strategies.",
    "Link": [
      "https://enigma.co/catalyst/",
      "http://catalystcrypto.io",
      "https://github.com/enigmampc/catalyst"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "library"
    ]
  },
  "Chat With Traders \u00b7 Conversations with talented traders\u2014in stocks, futures, options, forex and crypto markets.": {
    "Description": "Chat With Traders is your key to the minds of trading's elite performers. Start listening to learn how a diverse mix of traders went from zero to hero, how they successfully trade markets today, and get their best tips 'n pointers for profitable performance, plus much more. Note: You are responsible for your own trading decisions\u2014this is not financial advice.",
    "Link": [
      "https://itunes.apple.com/us/podcast/chat-traders-conversations-talented-traders-in-stocks/id957265404?mt=2&i=1000420535357"
    ],
    "Tags": [
      "trading",
      "podcast"
    ]
  },
  "Crypto Trading on QuantConnect": {
    "Description": "The QuantConnect Algorithm Lab allows you to allows write code in project files and then press the  Build button to compile your algorithm. Build errors will be displayed in the console and highlighted with red-lines.\n\nYou can add, rename and delete files in your project in the Projects tab. In order to rename your project click into the project, hover over the title and click on the pencil to the right of it. You can create a virtual folder for your project by placing a slash (\"/\") into the name of your file. The bare minimum to run an algorithm is your initialization and data event methods.",
    "Link": [
      "https://www.quantconnect.com/docs/home/home"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "CryptoQuantamental on Youtube": {
    "Description": "CryptoQuantamental on Youtube",
    "Link": [
      "https://www.youtube.com/channel/UCnVOQqymq5ZQkG536EItX0Q/"
    ],
    "Tags": [
      "python",
      "cryptoqf",
      "algorithmic-trading",
      "trading",
      "development",
      "videos"
    ]
  },
  "Dash is a Python framework for building analytical web applications. No JavaScript required.": {
    "Description": "Build beautiful web-based interfaces in Python\nDash is a Python framework for building analytical web applications. No JavaScript required.",
    "Link": [
      "https://plot.ly/products/dash/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Design of Algorithmic Cryptocurrency Trading Bot": {
    "Description": "I have discussed the development of a cryptocurrency trading bot with python on my Medium.com blog previously, such as through the creation of a Binance Bot and creating an Advanced Cryptocurrency Trading Bot with CCXT to trade all coins on any and all exchanges.\n\nCreating the functionality within Python is one portion of a bot (the tactics), but the strategy behind the bot/software must now be discussed. An outline of the strategy behind a crypto trading bot is available below:",
    "Link": [
      "https://medium.com/@BlockchainEng/design-of-algorithmic-cryptocurrency-trading-bot-e6b30e30987f"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "ccxt",
      "trading"
    ]
  },
  "Detailed overview of building Python algo trading system with Bitcoin an crypto currency focus": {
    "Description": "OVERVIEW \u2013 As Bitcoin ruled the financial news cycle in recent times, many have had a peak interest in cyrpto currency along with systematic trading. There are many advanced trading research techniques including machine learning, AI, or quant. This course was created for the \u2018newbie\u2019 who has a basic understand in popular programming languages but easy to learn such as Python. A focus of technical analysis was chosen since it is popular among retail traders. It is also seems to offer more predictable results as opposed to harder to learn concepts such as quant or machine learning. In essence, a simpler with more effective techniques were purposely chosen to get someone with basic programming knowledge (eg. Python) to get ramped up faster! It is very hopeful any student will become more confident in their capabilities to complete this without the unnecessary complexities that usually hold back their success.",
    "Link": [
      "https://www.youtube.com/watch?v=wn7sA3jZcyI",
      "https://quantlabs.net/blog/2018/03/new-course-building-python-algo-trading-system-with-bitcoin-an-crypto-currency-focus/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Developing Bitcoin algorithmic trading strategies": {
    "Description": "Developing algorithmic trading models and strategies is no simple task. To make matters worse the current state of crypto is highly volatile and rapidly changing. The market has become war zone due to regulations from the SEC and various governments targeting crypto exchanges. Despite all of the negative news, many traders are making it big in day-trading crypto assets.",
    "Link": [
      "https://medium.com/swlh/developing-bitcoin-algorithmic-trading-strategies-bfdde5d5f6e0"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Financial Modelling in Python \u2014 S. Fletcher & C. Gardner": {
    "Description": "Financial Modelling in Python \u2014 S. Fletcher & C. Gardner",
    "Link": [
      "https://uhs.es/Financial%20Modelling%20in%20Python.pdf"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "books"
    ]
  },
  "Fintech open source repository": {
    "Description": "Fintech open source repository \n\n Best open source libraries for fintech",
    "Link": [
      "https://www.fintastico.com/coding/github-repos-list/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "libraries",
      "fintech"
    ]
  },
  "Forex trading with functional programming": {
    "Description": "I'm looking for information about how to program a forex trading system with functional programming (I use scheme). Any idea or link you could give me?",
    "Link": [
      "http://lambda-the-ultimate.org/node/2852"
    ],
    "Tags": [
      "algorithmic-trading",
      "development",
      "thread"
    ]
  },
  "Free Quantitative Finance Resources": {
    "Description": "Welcome to the big list of free quantitative finance resources!\n\nI've listed here all of the free ebooks, slides, courses, videos and data that I've found useful during my quant finance career. The resources are broken down by category and are all completely free (or require free signup).\n\nI will be constantly updating this page as and when I find new content around the web, so keep checking back.",
    "Link": [
      "https://www.quantstart.com/articles/Free-Quantitative-Finance-Resources"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "resources"
    ]
  },
  "FreeCodeCamp": {
    "Description": "Learn Developing",
    "Link": [
      "https://www.freecodecamp.org/"
    ],
    "Tags": [
      "python",
      "development",
      "resources"
    ]
  },
  "Getting Started with Financial Modeling | Financial Modeling Tutorial | What is Financial Modeling": {
    "Description": "This Financial Modeling tutorial helps you to learn financial modeling with examples. This video is ideal for beginners to learn the basics of financial modeling.",
    "Link": [
      "https://www.youtube.com/watch?v=S1eSz_lfAao"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "financial-modeling"
    ]
  },
  "Here's how good you need to be at coding in Python to get a finance job": {
    "Description": "Alex Hamed Ahmadi, a graduate student at Oxford University who previously worked as a core strategist at Goldman Sachs and assistant vice president at Barclays Capital, is the winner of Man Group AHL's coding competition.  When the competition was launched last year, Man invited students of any age and level to write code to control a player on 'Hexplode,' an old-school computer game in which two players take place counters in cells on a hexagonal board. When the number of tokens in each cell reaches a critical level, the cell 'hexplodes' and distributes them to adjacent cells. The winner removes all the other player's counters from the board, or forces the other player to make an invalid move, or has to wait more than five seconds for the other player to make a move. You can read the full rules here. ",
    "Link": [
      "https://news.efinancialcareers.com/us-en/236550/python-coding-finance-job"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "High Frequency Trading on the Coinbase Exchange": {
    "Description": "I\u2019ve recently started trading bitcoins algorithmically on the new Coinbase exchange. After reading about high-frequency trading in the book Flash Boys by Michael Lewis, I decided I\u2019d give it a shot myself, albeit in a clumsier, more amateurish way.\n\nThe experience has been fascinating, both on a technical level, and in a strategic sense. Writing logic that controls money itself is a strange thing. Setting it loose for the first time, knowing that any bug could literally throw away cash, was terrifying.\n\nBitcoin is an incredibly open system that is particularly friendly to no-name developers. The exchanges have open API\u2019s that allow anyone, literally anyone, to trade. There\u2019s no premium access, no expensive trading floor credentials. It\u2019s totally open \u2013 I love that.",
    "Link": [
      "https://www.coindesk.com/high-frequency-trading-on-the-coinbase-exchange/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Learn Python 2": {
    "Description": "Learn the basics of the world's fastest growing and most popular programming language used by software engineers, analysts, data scientists, and machine learning engineers alike.",
    "Link": [
      "https://www.codecademy.com/learn/learn-python"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Learning both financial modelling and python at the same time- on Reddit": {
    "Description": "So I've been trying to find the best way to learn financial modelling and python and I figured I could basically do both. Do you know any book/free course that would teach both python and financial modelling or should I learn financial modelling then Python?",
    "Link": [
      "https://www.reddit.com/r/investing/comments/90gzh6/learning_both_financial_modelling_and_python/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "reddit"
    ]
  },
  "Mastering Python for Finance": {
    "Description": "Chapter 1. Python for Financial Applications\n\nIn this introductory chapter, we will explore the aspects of Python in order to judge its suitability as a programming language in finance. Notably, Python is widely practiced in various financial sectors, such as banking, investment management, insurance, and even in real estate for building tools that help in financial modeling, risk management, and trading. To help you get the most from the multitude of features that Python has to offer, we will introduce the IPython Notebook as a beneficial tool to help you visualize data and to perform scientific computing for presentation to end users.",
    "Link": [
      "https://www.packtpub.com/mapt/book/big_data_and_business_intelligence/9781784394516/1"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "MatPlotLib": {
    "Description": "Matplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms.",
    "Link": [
      "https://matplotlib.org/index.html"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "libraries"
    ]
  },
  "Mitigating Spreadsheet Model Risk with Python Open Source Infrastructure": {
    "Description": "Across an aggregation of EuSpRIG presentation papers, two maxims hold true: spreadsheets models are akin to software, yet spreadsheet developers are not software engineers. As such, the lack of traditional software engineering tools and protocols invites a higher rate of error in the end result. This paper lays ground work for spreadsheet modelling professionals to develop reproducible audit tools using freely available, open source packages built with the Python programming language, enabling stakeholders to develop clearly defined model 'oracles' with which to test and audit spreadsheet calculations against.",
    "Link": [
      "https://arxiv.org/pdf/1801.09771.pdf"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "risk-management"
    ]
  },
  "My Foray Into Algorithmic Crypto Trading": {
    "Description": "Yep, it seems that everyone and their dogecoin is climbing onto the cryptocurrency bandwagon in one way or another. I\u2019m not sure if it was the relentless barrage of headlines, those soaring price charts, or just the feeling that something truly disruptive was happening, but I have to admit I was intrigued.\n\nAnd so it was that about a month ago I started playing around with algorithmic cryptocurrency trading. A month later I haven\u2019t made a cent, but I did manage to have fun and learned quite a bit so thought it might be worth sharing. I also ended up writing a fairly flexible trading bot in Python which I wanted to share. (You can find it on GitHub.)",
    "Link": [
      "https://blog.madebywindmill.com/my-foray-into-algorithmic-crypto-trading-beac9113de36"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Popular Python Trading Platforms For Algorithmic Trading": {
    "Description": "With this article on \u2018Python Libraries and Platforms\u2019, we would be covering the most popular and widely used Python Trading Platforms and Python Trading Libraries for quantitative trading.",
    "Link": [
      "https://www.quantinsti.com/blog/python-trading-library/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Python Algorithmic Trading Library": {
    "Description": "PyAlgoTrade is a Python Algorithmic Trading Library with focus on backtesting and support for paper-trading and live-trading. Let\u2019s say you have an idea for a trading strategy and you\u2019d like to evaluate it with historical data and see how it behaves. PyAlgoTrade allows you to do so with minimal effort.",
    "Link": [
      "http://gbeced.github.io/pyalgotrade/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "library"
    ]
  },
  "Python Machine Learning Step-by-Step: Modeling Financial Time Series Data": {
    "Description": "During this talk, Reece Heineke will demonstrate in one hour how you can use Python to explore financial time series data, apply a number of machine learning models and find the best fitting one.\n\nStarting with a generated data set, we will evaluate ways to make the data quantity manageable, explore the data visually, do some basic cleaning and ultimately use supervised learning to determine which model is the most appropriate for the data.",
    "Link": [
      "https://vimeo.com/210865253"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Python for Finance - Yves Hilpisch (Oreily)": {
    "Description": "Not too long ago, Python as a programming language and platform technology was considered exotic \u2014 if not completely irrelevant \u2014 in the financial industry. By contrast, in 2014 there are many examples of large financial institutions \u2014 like Bank of America Merrill Lynch with its Quartz project, or JP Morgan Chase with the Athena project \u2014 that strategically use Python alongside other established technologies to build, enhance, and maintain some of their core IT systems. There is also a multitude of larger and smaller hedge funds that make heavy use of Python\u2019s capabilities when it comes to efficient financial application development and productive financial analytics efforts.\n\nSimilarly, many of today\u2019s Master of Financial Engineering programs (or programs awarding similar degrees) use Python as one of the core languages for teaching the translation of quantitative finance theory into executable computer code. Educational programs and trainings targeted to finance professionals are also increasingly incorporating Python into their curricula. Some now teach it as the main implementation language.",
    "Link": [
      "https://doc.lagout.org/programmation/python/Python%20for%20Finance_%20Analyze%20Big%20Financial%20Data%20%5BHilpisch%202014-12-27%5D.pdf"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "books"
    ]
  },
  "Python for Finance, Part 2: Intro to Quantitative Trading Strategies": {
    "Description": "In Python for Finance, Part I, we focused on using Python and Pandas to retrieve financial time-series from free online sources (Yahoo), format the data by filling missing observations and aligning them, calculate some simple indicators such as rolling moving averages and visualise the final time-series.",
    "Link": [
      "https://www.learndatasci.com/tutorials/python-finance-part-2-intro-quantitative-trading-strategies/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Python for analysing financial markets": {
    "Description": "This article is split into three parts. Firstly, we discuss the relative merits of various programming languages for analysing financial markets. This part is especially relevant for readers less familiar with Python or coding in general. There are short explanations of how some of the more common languages operate and what is of particular importance when it comes to performance and usability.\n\nSecondly, we go into detail about the libraries available in Python to analyse data. Our discussion covers some libraries which might be less well-known within the Python data community. We suggest that developers familiar with Python should jump to this part.\n\nFinally, we introduce Cuemacro's open-source financial market libraries written in Python: Chartpy (visualisation), Findatapy (market data) and Finmarketpy (backtesting trading strategies). We conclude by presenting some examples of market analysis written in Python using these libraries.",
    "Link": [
      "http://www.automatedtrader.net/articles/technology-strategy/157883/python-for-analysing-financial-markets"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "libraries"
    ]
  },
  "Python-Binance.readthedocs.io": {
    "Description": "Python Binance",
    "Link": [
      "https://python-binance.readthedocs.io/en/latest/overview.html"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "binance"
    ]
  },
  "PythonAndTrading.com": {
    "Description": "Getting started with algorithmic trading using Python and a bit of machine learning",
    "Link": [
      "http://www.pythonandtrading.com/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "resources"
    ]
  },
  "Quant News": {
    "Description": "Quantitative Trading, Algorithmic Trading, System Trading, Robot Trading and More.",
    "Link": [
      "https://www.quantnews.com/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "news"
    ]
  },
  "Quant Reading List": {
    "Description": "Python is rapidly gaining traction in the quant finance world. Many of the top quant forums contain more and more questions every day about how Python can be used in quantitative finance. This article will present a list of textbooks that are suitable for learning Python from the ground up to an intermediate level.\n\nPython, at least in the financial engineering world, originally began life as the \"glue\" between other codes written in compiled languages such as C++ and Java. However, with the advent of projects like NumPy, SciPy and PyPy, it is beginning to make in-roads into the realm of scientific computing, and hence derivatives pricing.",
    "Link": [
      "https://www.quantstart.com/articles/Quant-Reading-List-Python-Programming"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "books"
    ]
  },
  "QuantConnect": {
    "Description": "Pioneering Tomorrow's Trading\n\nResearch, Backtest and Trade Your Investments\n\nBuild Algorithms in a Browser IDE, Using Template Strategies and Free Data\n\n Design and test your strategy on our free data and when you're ready deploy it live to your brokerage. Code in multiple programming languages and harness our cluster of hundreds of servers to run your backtest to analyse your strategy in Equities, FX, CFD, Options or Futures Markets.",
    "Link": [
      "https://www.quantconnect.com"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Quantum Astro Trading": {
    "Description": "In this article we discuss quantum trading strategies based on astro phenomena. I will try to do that as simple as possible. The module that creates quantum trading strategies is a part of Trading Strategy Constructor module (****). Right now this module employs pretty sophisticated math to  find the best quantum strategy; it does that fantastically fast. Without those super fast algorithms, this module  would be just some \"Digital fortress\", while the computational time would make it  useless.\n\nNo matter how sophisticated and complicated all these models/math/algorithms are, there is a very simple idea behind it. I will explain below the core of this idea putting away all math details. The information that you will receive is enough for making you able to create your own quantum astro models (this is why this article sometimes may look like a documentation for this module).",
    "Link": [
      "http://www.timingsolution.com/TS/Articles/quantum_astro/index.htm"
    ],
    "Tags": [
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "RenkoTrading: an embarrassingly simple algorithm for cryptocurrency trading that will deprecate the old notion that \\\u201chodling is the best strategy' (part I)": {
    "Description": "Over the last months, I\u2019ve explored ways not only to invest in crypto but also maximizing the profits from it. One of the first ideas that came to my mind was to develop an automatic trading bot to perform a type of trading known as arbitrage. Although there are different subtypes of arbitrage, in my case, essentially consisted in finding two cryptocurrency exchanges and profit from divergences in their exchange prices. For instance, with enough patience, the automatic trader could find an opportunity where one could sell 1 Bitcoin for 8000 dollars in GDAX and buy 1 Bitcoin for 7950 dollars in Kraken with a profit margin of 50$. Although the concept is of a magnificent simplicity, the reality is that the algorithm could become exponentially complex when one started to introduce fancy high-frequency limit orders (instead of market orders) trying to outperform a ferocious competition equipped with low-latency internet connections and besieging the exchanges from the nearer buildings. The result: an arbitrage nightmare and a waste of time supervising the algorithm performance for very little revenue. My conclusion: can be an interesting project for a full-time dedicated PhD student willing to mingle with a Frankenstein Python code.",
    "Link": [
      "https://cryptodigestnews.com/renkotrading-660d9f64c904"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "The All-In-One Cryptocurrency API": {
    "Description": "The All-In-One Cryptocurrency API Live Data Powered by Coinigy CryptoFeed\u2122",
    "Link": [
      "https://www.coinigy.com/bitcoin-api/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "coingy"
    ]
  },
  "The Best Open Source (And Free) Crypto Trading Bots": {
    "Description": "Crypto trading bots are tools used by traders to take the fear and emotion out of their trading. These bots allow you to run trading strategies 24/7 (assuming the exchange is working properly) and provide the customization needed to make the bot trade anyway you like. We\u2019ve compiled a list of the best open source (and free) crypto trading bots currently available.All of these bots are available to download and require just a bit of command line experience to get up and running. Even though they are free, each offer many features to keep your automated trading profitable.",
    "Link": [
      "https://www.cryptotrader.tax/blog/the-best-open-source-and-free-crypto-trading-bots"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "bots"
    ]
  },
  "This Python for Finance tutorial introduces you to algorithmic trading, and much more": {
    "Description": "Technology has become an asset in finance: financial institutions are now evolving to technology companies rather than just staying occupied with just the financial aspect: besides the fact that technology brings about innovation the speeds and can help to gain a competitive advantage, the speed and frequency of financial transactions, together with the large data volumes, makes that financial institutions\u2019 attention for technology has increased over the years and that technology has indeed become a main enabler in finance.",
    "Link": [
      "https://www.datacamp.com/community/tutorials/finance-python-trading"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Top Backtesting Platforms for Quantitative Trading": {
    "Description": "We have a large number of vendor-developed backtesting platforms available in the market which can be very efficient in backtesting automated strategies, but to decide which ones will suit your requirements, needs some research. Ideally, custom development of a backtesting environment within a first-class programming language provides the most flexibility and third party platforms might make a number of assumptions. Despite this, the choice of available programming languages is large and diverse, which can often be overwhelming. When automating a strategy into systematic rules; the trader must be confident that its future performance will be reflective of its past performance. There are broadly two forms of backtesting system that are utilised to test this hypothesis; research back testers and event-driven back testers.",
    "Link": [
      "https://www.quantinsti.com/blog/top-backtesting-platforms-for-quants/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Trading with Python": {
    "Description": "Ideally, I would like learn only one language that is suited for all kinds of work: number crunching, application building, web development, interfacing with APIs etc. This language would be easy to learn, the code would be compact and clear, it would run on any platform. It would enable me to work interactively, enabling the code to evolve as I write it and be at least free as in speech. And most importantly, I care much more about my own time than the cpu time of my pc, so number crunching performance is less important for me than my own productivity.\n\nToday two most popular languages for technical and scientific computing are Matlab and Python. Both of them satisfy many of the wishes described above, but they have some important differences. Matlab is most popular when it comes to technical computing. This is what I used to use day-to-day for solving engineering problems. For numeric simulations and working with \"clean\" data, it is probably the best tool there is. Good IDE, fantastic plotting functions, great documentation. It is less well suited for application development or as a general purpose language. Expect to pay ~2k$ for a basic commercial license plus extra for specific toolboxes.",
    "Link": [
      "http://www.tradingwithpython.com/?page_id=439"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Twitter sentiment analysis using Python and NLTK": {
    "Description": "This post describes the implementation of sentiment analysis of tweets using Python and the natural language toolkit NLTK. The post also describes the internals of NLTK related to this implementation.",
    "Link": [
      "http://www.laurentluce.com/posts/twitter-sentiment-analysis-using-python-and-nltk/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development"
    ]
  },
  "Using LSTMs For Stock Market Predictions (Tensorflow)": {
    "Description": "In this tutorial, you will see how you can use a time-series model known as Long Short-Term Memory. LSTM models are powerful, especially for retaining a long-term memory, by design, as you will see later. You\u2019ll tackle the following topics in this tutorial:",
    "Link": [
      "https://towardsdatascience.com/using-lstms-for-stock-market-predictions-tensorflow-9e83999d4653"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "trading",
      "development",
      "tensorflow",
      "time-series"
    ]
  },
  "Why Python Should Be the Technology Choice for Your Fintech": {
    "Description": "Early on in the process of setting up your fintech startup you will have to make key decisions that are very hard to un-make.\n\nOne such decision is your choice of tech stack, chiefly the programming language. If you go wrong here, your costs may skyrocket down the line, putting you in the red despite best intentions.",
    "Link": [
      "https://stxnext.com/blog/2018/09/13/why-python-should-be-technology-choice-your-fintech/"
    ],
    "Tags": [
      "python",
      "algorithmic-trading",
      "fintech",
      "development"
    ]
  }
}
